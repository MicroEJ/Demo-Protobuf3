.. ReStructuredText
.. Copyright 2020 MicroEJ Corp. All rights reserved.
.. Use of this source code is governed by a BSD-style license that can be found with this software.

Overview
~~~~~~~~

This project example shows how to use Protobuf 3 with MicroEJ.

Protobuf is a Google's mechanism for serializing structured data. Protobuf consists in:

- a description language that describes the structure of the data
- a compiler that generates source code from that description
- a library that is used by the generated source code for the serialization.
For more information about Protobuf, please refer to https://developers.google.com/protocol-buffers.


	**Warning:** Protobuf may not be suitable for all embedded applications. It can generate a lot of code and thus have a significant impact on the ROM footprint..

Project structure
-----------------

- ``src/``
	- Java sources
		- ``Main.java`` is the class that is used to launch the example.
		- ``AppProto.java`` is the file generated by the protobuf compiler that is used for the serialization.
		- ``Timestamp.java`` and ``TimestampOrBuilder.java`` are files genereated from Google's ``timestamp.proto`` that are used for dates in this example.
	- Resources
		- ``AppProto.proto`` file, it is the file ``AppProto.java`` was generated from. ``.proto`` files do not need to be added to the MicroEJ projects, here it was added to expose the protobuf code that was used.
- ``module.ivy``: `Module descrption file <https://docs.microej.com/en/latest/ApplicationDeveloperGuide/mmm.html#module-description-file>`_
- ``CHANGELOG.rst``
- ``LICENCE.txt``
- ``README.rst``

Configuration
-------------

This project has Protobuf3 already added to its dependencies. To add Protobuf3 to your own project, add the following line to your ``module.ivy``: ``<dependency org="com.google" name="protobuf3" rev="1.0.0"/>``. You can look at this project's `module.ivy` file to see where to add the dependency line.

Usage
-----

To launch the application, right-click on the project, select ``Run as`` > ``MicroEJ Application`` and choose a valid Platform in the menu. For more information on running this application on a hardware device, please refer to the "Getting started" tutorial on https://developer.microej.com/get-started/.

Java files generation
^^^^^^^^^^^^^^^^^^^^^

The ``AppProto.java`` file was generated with `javalite 3.0.0 <https://github.com/protocolbuffers/protobuf/blob/javalite/java/lite.md>`_ with the following command:

	``$ protoc --javalite_out=src/main/java/ src/main/resources/com/microej/example/protobuf3example/AppProto.proto``

Requirements
~~~~~~~~~~~~

This example has been tested on:

- MicroEJ SDK 5.2
- With a platform that contains:

  - EDC-1.3

Dependencies
------------

*All dependencies are retrieved transitively by Ivy resolver.*

Source
~~~~~~

N/A

Restrictions
~~~~~~~~~~~~

None.